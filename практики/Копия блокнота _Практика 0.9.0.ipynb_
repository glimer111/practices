{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1dCue7ikahGj2h9v_9tVCTs9_fwCXe2AX","timestamp":1731364882133},{"file_id":"1zZbU5QXY3ZEtfsKWHQC-JGRhxn7rwGmd","timestamp":1731382230935}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["ФИО"],"metadata":{"id":"8hJfL9b2l439"}},{"cell_type":"code","source":["Бочкарев Пётр Владиславович"],"metadata":{"id":"wRnqvYOkl6EX"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Дисклеймер"],"metadata":{"id":"weOtPwPQmgpD"}},{"cell_type":"markdown","source":["В данной практике вам необходимо применить все ваши знания по темам:\n","\n","- Функции\n","- Словари\n","- Списки\n","- Множества\n","- Условные конструкции\n","- Запросы\n","\n","и все что было изучено на прошлых практических занятиях\n","\n","В каждом задании кратко описаны функции, которые необходимо реализовать, детали реализации вы должны продумать самостоятельно.\n","\n","# **Дисклеймер 2**\n","\n","В данной практике также учитывается критерий: чистота и читаемость кода"],"metadata":{"id":"LznB3uscmjDa"}},{"cell_type":"markdown","source":["# Задание 0"],"metadata":{"id":"7nSJIqkTvC_C"}},{"cell_type":"markdown","source":["Создайте функцию по нахождению уникальных элементов из двух списков\n","\n","\n","\n","```\n","a = [1, 2, 3, 4]\n","b = [3, 4, 5, 6]\n","```\n","\n"],"metadata":{"id":"exACjTiVvGUe"}},{"cell_type":"code","source":["def UniqueElements(a, b):\n","  UniqueList = []\n","  UniqueList.append(set(a).difference(set(b)))\n","  UniqueList.append(set(b).difference(set(a)))\n","  return list(UniqueList)\n","\n","first_list = input('Введите первый список: ').split(' ')\n","second_list = input('Введите второй список: ').split(' ')\n","UniqueElements(first_list, second_list)\n"],"metadata":{"id":"V_31CrfGbH7V","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731375045243,"user_tz":-300,"elapsed":4966,"user":{"displayName":"K3nt1c","userId":"06930504406908418568"}},"outputId":"52f794c5-a8c1-4e32-f2ec-c868aa52ce1b"},"execution_count":8,"outputs":[{"name":"stdout","output_type":"stream","text":["Введите первый список: 1 2 3 4\n","Введите второй список: 3 4 5 6\n"]},{"output_type":"execute_result","data":{"text/plain":["[{'1', '2'}, {'5', '6'}]"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["# Задание 1"],"metadata":{"id":"SVWNlBALpCNo"}},{"cell_type":"markdown","source":["Симулятор виртуального питомца\n","\n","Цель: создать виртуальный симулятор домашних животных, в котором пользователи смогут заводить питомцев и ухаживать за ними.\n","\n","Требования:\n","\n","- Функция для усыновления питомца (имя, тип, возраст).\n","- Функция для того, чтобы покормить питомца, поиграть с ним или уложить его спать.\n","- Функция для отображения состояния питомца (голод, радость, энергия)."],"metadata":{"id":"RcKA-VEqpC7f"}},{"cell_type":"code","source":["import random\n","import time\n","\n","class Pet:\n","\n","  def __init__(self, name, pet_type, age):\n","    self.name = name\n","    self.pet_type = pet_type\n","    self.age = age\n","    self.satiety = 50\n","    self.happiness = 50\n","    self.energy = 50\n","\n","\n","  def feed(self):\n","    if self.satiety < 50:\n","      self.satiety -= 30\n","      self.energy += 5\n","      self.happines += 10\n","      print('ваш питомец поел')\n","    else:\n","      print(f'{self.name} не голоден')\n","\n","\n","  def play(self):\n","    if self.energy > 30:\n","      self.energy -= 25\n","      self.happiness += 30\n","      self.satiety += 10\n","      print('ваш питомец поиграл')\n","    else:\n","      print(f'{self.name} слишком устал чтобы играть')\n","\n","\n","  def sleep(self):\n","    if self.energy < 20:\n","      self.energy += 75\n","      self.happiness += 10\n","      self.satiety -= 20\n","      print('Ваш питомец поспал')\n","    else:\n","      print(f'{self.name} не хочет спать')\n","\n","\n","  def status(self):\n","    print('\\nсостояние вашего питомца:')\n","    print(f'Имя: {self.name}')\n","    print(f'Тип: {self.pet_type}')\n","    print(f'Возраст: {self.age}')\n","    print(f'Сытость: {self.satiety}')\n","    print(f'Радость: {self.happiness}')\n","    print(f'Энергия: {self.energy}')\n","\n","\n","  def auto_update(self):\n","    self.satiety += random.randint(1, 5)\n","    self.happiness += random.randint(1, 5)\n","    self.energy += random.randint(1, 5)\n","\n","\n","def adopt_pet():\n","  name = input('Введите имя вашего питомца: ')\n","  pet_type = input('Введите тип вашего питомца: ')\n","  age = int(input('Введите возраст вашего питомца: '))\n","  pet = Pet(name, pet_type, age)\n","  print(f'Вы усыновили {pet_type} по имени {name}')\n","  return pet\n","\n","\n","def main():\n","  pet = adopt_pet()\n","  while True:\n","    time.sleep(2)\n","    pet.auto_update()\n","    print('\\nЧто вы хотите сделать?')\n","    print('1 - покрмить питомца')\n","    print('2 - поиграть с питомцем')\n","    print('3 - отправить в нокаут')\n","    print('4 - показать статус питомца')\n","    print('0 - выход')\n","\n","    choice = int(input('Выберите действие '))\n","\n","    if choice == 1:\n","      pet.feed()\n","    elif choice == 2:\n","      pet.play()\n","    elif choice == 3:\n","      pet.sleep()\n","    elif choice == 4:\n","      pet.status()\n","    elif choice == 0:\n","      print('Выход')\n","      break\n","    else:\n","      print('Ввод некорректный. Попробуй еще. Умоляю. Пожалуйста.')\n","\n","main()\n","\n","\n","\n",""],"metadata":{"id":"hE7mF-HXpJLO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731373883481,"user_tz":-300,"elapsed":79142,"user":{"displayName":"K3nt1c","userId":"06930504406908418568"}},"outputId":"90ec311c-9dd1-4ee5-e93d-b6a741a16b5e"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите имя вашего питомца: Володя\n","Введите тип вашего питомца: Желудь\n","Введите возраст вашего питомца: 2\n","Вы усыновили Желудь по имени Володя\n","\n","Что вы хотите сделать?\n","1 - покрмить питомца\n","2 - поиграть с питомцем\n","3 - уложить в нокаут\n","4 - показать статус питомца\n","0 - выход\n","Выберите действие 2\n","ваш питомец поиграл\n","\n","Что вы хотите сделать?\n","1 - покрмить питомца\n","2 - поиграть с питомцем\n","3 - уложить в нокаут\n","4 - показать статус питомца\n","0 - выход\n","Выберите действие 2\n","ваш питомец поиграл\n","\n","Что вы хотите сделать?\n","1 - покрмить питомца\n","2 - поиграть с питомцем\n","3 - уложить в нокаут\n","4 - показать статус питомца\n","0 - выход\n","Выберите действие 1\n","Володя не голоден\n","\n","Что вы хотите сделать?\n","1 - покрмить питомца\n","2 - поиграть с питомцем\n","3 - уложить в нокаут\n","4 - показать статус питомца\n","0 - выход\n","Выберите действие 3\n","Ваш питомец поспал\n","\n","Что вы хотите сделать?\n","1 - покрмить питомца\n","2 - поиграть с питомцем\n","3 - уложить в нокаут\n","4 - показать статус питомца\n","0 - выход\n","Выберите действие 4\n","\n","состояние вашего питомца:\n","Имя: Володя\n","Тип: Желудь\n","Возраст: 2\n","Сытость: 65\n","Радость: 131\n","Энергия: 98\n","\n","Что вы хотите сделать?\n","1 - покрмить питомца\n","2 - поиграть с питомцем\n","3 - уложить в нокаут\n","4 - показать статус питомца\n","0 - выход\n","Выберите действие 0\n","Выход\n"]}]},{"cell_type":"markdown","source":["# Задание 2"],"metadata":{"id":"qZ7qFQnmssNd"}},{"cell_type":"markdown","source":["Рыцарь и дракон\n","\n","Цель: создать небольшую игру, в которой вам необходимо играть за рыцаря и сразиться с драконом\n","\n","Требования:\n","\n","- Создание персонажа (имя, информация о доспехах, оружии, урон, здоровье)\n","- Управление персонажем и мини сюжет\n","- Создание дракона (Имя, информация о здоровье и уроне)\n","- Боевая система (нанесение и получение урона, урон должен быть случайным в заданном диапазоне)\n","- Реализовать бой между драконом и рыцарем"],"metadata":{"id":"UaccTe7ltNvg"}},{"cell_type":"code","source":["import random\n","\n","class Character:\n","  def __init__(self, name, armor, weapon, health):\n","    self.name = name\n","    self.armor = armor\n","    self.weapon = weapon\n","    self.health = health\n","\n","  def attack(self):\n","    damage = random.randint(self.weapon['min_damage'], self.weapon['max_damage'])\n","    return damage\n","\n","  def take_damage(self, damage):\n","    effective_damage = max(0, damage - self.armor)\n","    self.health -= effective_damage\n","    return effective_damage\n","\n","class Knight(Character):\n","  def __init__(self, name):\n","    armor = 5\n","    weapon = {'name': str(input('оружие рыцаря: ')), 'min_damage': 5, 'max_damage': 12}\n","    health = 30\n","    super().__init__(name, armor, weapon, health)\n","\n","class Dragon(Character):\n","  def __init__(self, name):\n","    armor = 3\n","    weapon = {'name': 'Огненное дыхание', 'min_damage': 5, 'max_damage': 13}\n","    health = 50\n","    super().__init__(name, armor, weapon, health)\n","\n","def battle(knight, dragon):\n","  print(f\"Бой начался между {knight.name} и {dragon.name}!\")\n","\n","  while knight.health > 0 and dragon.health > 0:\n","\n","    knight_damage = knight.attack()\n","    dragon_damage_taken = dragon.take_damage(knight_damage)\n","    print(f\"{knight.name} атакует {dragon.name} и наносит {knight_damage} урона!\")\n","    print(f\"{dragon.name} теперь имеет {dragon.health} здоровья.\")\n","\n","    if dragon.health <= 0:\n","      print(f\"{dragon.name} повержен! {knight.name} победил!\")\n","      break\n","\n","\n","    dragon_damage = dragon.attack()\n","    knight_damage_taken = knight.take_damage(dragon_damage)\n","    print(f\"{dragon.name} атакует {knight.name} и наносит {dragon_damage} урона!\")\n","    print(f\"{knight.name} теперь имеет {knight.health} здоровья.\")\n","\n","    if knight.health <= 0:\n","      print(f\"{knight.name} повержен! {dragon.name} победил!\")\n","      break\n","\n","def main():\n","  print(\"Добро пожаловать в игру 'Рыцарь и дракон'!\")\n","\n","  knight_name = input(\"Введите имя вашего рыцаря: \")\n","  knight = Knight(knight_name)\n","\n","  dragon_name = input(\"Введите имя дракона: \")\n","  dragon = Dragon(dragon_name)\n","\n","  battle(knight, dragon)\n","\n","if __name__ == \"__main__\":\n","  main()"],"metadata":{"id":"LCcxp5Q0srjY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731371382071,"user_tz":-300,"elapsed":26698,"user":{"displayName":"K3nt1c","userId":"06930504406908418568"}},"outputId":"601e246f-5b11-48da-9c52-c7eddccb6db4"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["Добро пожаловать в игру 'Рыцарь и дракон'!\n","Введите имя вашего рыцаря: Альберт Эйнштейн\n","оружие рыцаря: Клавиатура\n","Введите имя дракона: Никола Тесла\n","Бой начался между Альберт Эйнштейн и Никола Тесла!\n","Альберт Эйнштейн атакует Никола Тесла и наносит 6 урона!\n","Никола Тесла теперь имеет 47 здоровья.\n","Никола Тесла атакует Альберт Эйнштейн и наносит 7 урона!\n","Альберт Эйнштейн теперь имеет 28 здоровья.\n","Альберт Эйнштейн атакует Никола Тесла и наносит 7 урона!\n","Никола Тесла теперь имеет 43 здоровья.\n","Никола Тесла атакует Альберт Эйнштейн и наносит 10 урона!\n","Альберт Эйнштейн теперь имеет 23 здоровья.\n","Альберт Эйнштейн атакует Никола Тесла и наносит 8 урона!\n","Никола Тесла теперь имеет 38 здоровья.\n","Никола Тесла атакует Альберт Эйнштейн и наносит 5 урона!\n","Альберт Эйнштейн теперь имеет 23 здоровья.\n","Альберт Эйнштейн атакует Никола Тесла и наносит 5 урона!\n","Никола Тесла теперь имеет 36 здоровья.\n","Никола Тесла атакует Альберт Эйнштейн и наносит 12 урона!\n","Альберт Эйнштейн теперь имеет 16 здоровья.\n","Альберт Эйнштейн атакует Никола Тесла и наносит 3 урона!\n","Никола Тесла теперь имеет 36 здоровья.\n","Никола Тесла атакует Альберт Эйнштейн и наносит 8 урона!\n","Альберт Эйнштейн теперь имеет 13 здоровья.\n","Альберт Эйнштейн атакует Никола Тесла и наносит 5 урона!\n","Никола Тесла теперь имеет 34 здоровья.\n","Никола Тесла атакует Альберт Эйнштейн и наносит 9 урона!\n","Альберт Эйнштейн теперь имеет 9 здоровья.\n","Альберт Эйнштейн атакует Никола Тесла и наносит 4 урона!\n","Никола Тесла теперь имеет 33 здоровья.\n","Никола Тесла атакует Альберт Эйнштейн и наносит 10 урона!\n","Альберт Эйнштейн теперь имеет 4 здоровья.\n","Альберт Эйнштейн атакует Никола Тесла и наносит 7 урона!\n","Никола Тесла теперь имеет 29 здоровья.\n","Никола Тесла атакует Альберт Эйнштейн и наносит 11 урона!\n","Альберт Эйнштейн теперь имеет -2 здоровья.\n","Альберт Эйнштейн повержен! Никола Тесла победил!\n"]}]},{"cell_type":"markdown","source":["# Задание 3\n"],"metadata":{"id":"N8oFiEXol3e2"}},{"cell_type":"markdown","source":["Цель - создать менеджера команды Pokémon, который позволит пользователям:\n","\n","- Добавлять покемонов в свою команду. (если такого покемона еще нет в команде)\n","- Удалять покемонов из их команды.\n","- Просматривать подробную информацию обо всех покемонах в команде.\n","- Находить покемона по имени.\n","- Устраивать тренировочный бой между двумя покемонами\n","\n","Для данной задачи используйте: https://pokeapi.co/\n"],"metadata":{"id":"9p4WQG_Vl7wB"}},{"cell_type":"code","source":["import requests\n","\n","class Pokemon:\n","  def __init__(self, name):\n","    self.name = name.lower()\n","    self.data = self.get_pokemon_data()\n","\n","\n","  def get_pokemon_data(self):\n","    url = f\"https://pokeapi.co/api/v2/pokemon/{self.name}\"\n","    response = requests.get(url)\n","    if response.status_code == 200:\n","      return response.json()\n","    else:\n","      raise ValueError(f\"Pokemon '{self.name}' not found.\")\n","\n","\n","  def get_info(self):\n","    info = {\n","      'name': self.data['name'].capitalize(),\n","      'height': self.data['height'],\n","      'weight': self.data['weight'],\n","      'types': [t['type']['name'] for t in self.data['types']],\n","      'hp': self.data['stats'][0]['base_stat'],\n","      'attack': self.data['stats'][1]['base_stat'],\n","      'defense': self.data['stats'][2]['base_stat']\n","    }\n","    return info\n","\n","\n","class Team:\n","  def __init__(self):\n","    self.pokemons = []\n","\n","\n","  def add_pokemon(self, name):\n","    try:\n","        new_pokemon = Pokemon(name)\n","        if new_pokemon.name not in [p.name for p in self.pokemons]:\n","          self.pokemons.append(new_pokemon)\n","          print(f\"{new_pokemon.name.capitalize()} добавлен в команду!\")\n","        else:\n","          print(f\"{new_pokemon.name.capitalize()} уже в команде.\")\n","    except ValueError as e:\n","        print(e)\n","\n","\n","  def remove_pokemon(self, name):\n","    for pokemon in self.pokemons:\n","      if pokemon.name == name.lower():\n","        self.pokemons.remove(pokemon)\n","        print(f\"{pokemon.name.capitalize()} удалён из команды!\")\n","        return\n","    print(f\"Покемон '{name}' не найден в команде.\")\n","\n","\n","  def view_team(self):\n","    if not self.pokemons:\n","      print(\"Ваша команда пуста.\")\n","      return\n","    for pokemon in self.pokemons:\n","      info = pokemon.get_info()\n","      print(f\"Имя: {info['name']}, Высота: {info['height']}, \"\n","            f\"Вес: {info['weight']}, Типы: {', '.join(info['types'])}, \"\n","            f\"HP: {info['hp']}, Атака: {info['attack']}, Защита: {info['defense']}\")\n","\n","\n","  def find_pokemon(self, name):\n","    for pokemon in self.pokemons:\n","      if pokemon.name == name.lower():\n","        info = pokemon.get_info()\n","        print(f\"Имя: {info['name']}, Высота: {info['height']}, \"\n","              f\"Вес: {info['weight']}, Типы: {', '.join(info['types'])}, \"\n","              f\"HP: {info['hp']}, Атака: {info['attack']}, Защита: {info['defense']}\")\n","        return\n","    print(f\"Покемон '{name}' не найден в команде.\")\n","\n","\n","  def battle(self, name1, name2):\n","    pokemon1 = next((p for p in self.pokemons if p.name == name1.lower()), None)\n","    pokemon2 = next((p for p in self.pokemons if p.name == name2.lower()), None)\n","\n","    if not pokemon1 or not pokemon2:\n","      print(\"Один или оба покемона не найдены в команде.\")\n","      return\n","\n","    hp1 = pokemon1.get_info()['hp']\n","    hp2 = pokemon2.get_info()['hp']\n","\n","    print(f\"Бой между {pokemon1.name.capitalize()} и {pokemon2.name.capitalize()} начался!\")\n","\n","    while hp1 > 0 and hp2 > 0:\n","      damage_to_pokemon2 = pokemon1.get_info()['attack']\n","      hp2 -= damage_to_pokemon2\n","      print(f\"{pokemon1.name.capitalize()} наносит {damage_to_pokemon2} урона!\")\n","      if hp2 <= 0:\n","        print(f\"{pokemon2.name.capitalize()} повержен!\")\n","        break\n","\n","      damage_to_pokemon1 = pokemon2.get_info()['attack']\n","      hp1 -= damage_to_pokemon1\n","      print(f\"{pokemon2.name.capitalize()} наносит {damage_to_pokemon1} урона!\")\n","      if hp1 <= 0:\n","        print(f\"{pokemon1.name.capitalize()} повержен!\")\n","        break\n","\n","\n","def main():\n","  team = Team()\n","\n","  while True:\n","    print(\"\\nМенеджер команды Pokemon\")\n","    print(\"1. Добавить покемона\")\n","    print(\"2. Удалить покемона\")\n","    print(\"3. Просмотреть команду\")\n","    print(\"4. Найти покемона по имени\")\n","    print(\"5. Устроить бой между покемонами\")\n","    print(\"6. Выход\")\n","\n","    choice = input(\"Выберите действие: \")\n","\n","    if choice == '1':\n","      name = input(\"Введите имя покемона для добавления: \")\n","      team.add_pokemon(name)\n","    elif choice == '2':\n","      name = input(\"Введите имя покемона для удаления: \")\n","      team.remove_pokemon(name)\n","    elif choice == '3':\n","      team.view_team()\n","    elif choice == '4':\n","      name = input(\"Введите имя покемона для поиска: \")\n","      team.find_pokemon(name)\n","    elif choice == '5':\n","      name1 = input(\"Введите имя первого покемона: \")\n","      name2 = input(\"Введите имя второго покемона: \")\n","      team.battle(name1, name2)\n","    elif choice == '6':\n","      print(\"Выход.\")\n","      break\n","    else:\n","      print(\"Некорректный ввод.\")\n","\n","if __name__ == \"__main__\":\n","    main()"],"metadata":{"id":"NnGYp1MTqi5k","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731374469834,"user_tz":-300,"elapsed":228869,"user":{"displayName":"K3nt1c","userId":"06930504406908418568"}},"outputId":"684d74f8-6525-4c06-a1fd-5791cca91e4c"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["nМенеджер команды Pokémon\n","1. Добавить покемона\n","2. Удалить покемона\n","3. Просмотреть команду\n","4. Найти покемона по имени\n","5. Устроить бой между покемонами\n","6. Выход\n","Выберите действие: епифантий\n","Некорректный ввод. Пожалуйста, попробуйте снова.\n","nМенеджер команды Pokémon\n","1. Добавить покемона\n","2. Удалить покемона\n","3. Просмотреть команду\n","4. Найти покемона по имени\n","5. Устроить бой между покемонами\n","6. Выход\n","Выберите действие: покемонослав\n","Некорректный ввод. Пожалуйста, попробуйте снова.\n","nМенеджер команды Pokémon\n","1. Добавить покемона\n","2. Удалить покемона\n","3. Просмотреть команду\n","4. Найти покемона по имени\n","5. Устроить бой между покемонами\n","6. Выход\n","Выберите действие: 1\n","Введите имя покемона для добавления: покемонослав\n","Pokemon 'покемонослав' not found.\n","nМенеджер команды Pokémon\n","1. Добавить покемона\n","2. Удалить покемона\n","3. Просмотреть команду\n","4. Найти покемона по имени\n","5. Устроить бой между покемонами\n","6. Выход\n","Выберите действие: 5\n","Введите имя первого покемона: покемонослав\n","Введите имя второго покемона: епифантий\n","Один или оба покемона не найдены в команде.\n","nМенеджер команды Pokémon\n","1. Добавить покемона\n","2. Удалить покемона\n","3. Просмотреть команду\n","4. Найти покемона по имени\n","5. Устроить бой между покемонами\n","6. Выход\n","Выберите действие: 3\n","Ваша команда пуста.\n","nМенеджер команды Pokémon\n","1. Добавить покемона\n","2. Удалить покемона\n","3. Просмотреть команду\n","4. Найти покемона по имени\n","5. Устроить бой между покемонами\n","6. Выход\n","Выберите действие: 1\n","Введите имя покемона для добавления: пикачу\n","Pokemon 'пикачу' not found.\n","nМенеджер команды Pokémon\n","1. Добавить покемона\n","2. Удалить покемона\n","3. Просмотреть команду\n","4. Найти покемона по имени\n","5. Устроить бой между покемонами\n","6. Выход\n","Выберите действие: 1\n","Введите имя покемона для добавления: pikachu\n","Pikachu добавлен в команду!\n","nМенеджер команды Pokémon\n","1. Добавить покемона\n","2. Удалить покемона\n","3. Просмотреть команду\n","4. Найти покемона по имени\n","5. Устроить бой между покемонами\n","6. Выход\n","Выберите действие: 1\n","Введите имя покемона для добавления: clefairy\n","Clefairy добавлен в команду!\n","nМенеджер команды Pokémon\n","1. Добавить покемона\n","2. Удалить покемона\n","3. Просмотреть команду\n","4. Найти покемона по имени\n","5. Устроить бой между покемонами\n","6. Выход\n","Выберите действие: 3\n","Имя: Pikachu, Высота: 4, Вес: 60, Типы: electric, HP: 35, Атака: 55, Защита: 40\n","Имя: Clefairy, Высота: 6, Вес: 75, Типы: fairy, HP: 70, Атака: 45, Защита: 48\n","nМенеджер команды Pokémon\n","1. Добавить покемона\n","2. Удалить покемона\n","3. Просмотреть команду\n","4. Найти покемона по имени\n","5. Устроить бой между покемонами\n","6. Выход\n","Выберите действие: 5\n","Введите имя первого покемона: pikachu\n","Введите имя второго покемона: clefairy\n","Бой между Pikachu и Clefairy начался!\n","Pikachu наносит 55 урона!\n","Clefairy наносит 45 урона!\n","Pikachu повержен!\n","nМенеджер команды Pokémon\n","1. Добавить покемона\n","2. Удалить покемона\n","3. Просмотреть команду\n","4. Найти покемона по имени\n","5. Устроить бой между покемонами\n","6. Выход\n","Выберите действие: 6\n","Выход из программы.\n"]}]}]}