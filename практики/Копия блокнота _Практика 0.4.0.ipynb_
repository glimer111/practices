{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"164mKoI4a7n8Gfq0Jmkn8lE_EDKOtZ_3n","timestamp":1728725539385},{"file_id":"1ZwSBZ3XI_wE-I4fLWA5wTMNwpfTDz2ov","timestamp":1728565946670}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Введите ваше ФИО:"],"metadata":{"id":"k8oVfdwrMXyc"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"5mcBLsKMI1-5"},"outputs":[],"source":["Бочкарев Пётр Владиславович"]},{"cell_type":"markdown","source":["***Дисклеймер***\n","\n","В данной практике запрещено использования функций:\n","\n","\n","*   sum()\n","*   min()\n","*   max()\n","*   average()\n","*   reversed()\n","*   sorted()\n","*   готовые функции или библиотеки\n"],"metadata":{"id":"8HbYUbm3Jw3o"}},{"cell_type":"markdown","source":["\n","**Задача 1:**\n","\n","\n","\n","Интернет-магазин предлагает следующие условия скидок:\n","\n","*   Для заказов больше 1000 единиц, клиент получает скидку 5%. Если клиент использует промокод SUPERDISCOUNT, он получает скидку 10% (вместо 5%).\n","*  Для заказов более 5000 единиц, клиент получает скидку 15%, а использование промокода SUPERDISCOUNT увеличивает скидку до 20% (вместо 15%).\n","\n","Этап 1:\n","Ввод:\n","```\n","Введите стоимость единицы товара: 5\n","Введите количество товара: 1001\n","Введите промокод: GiVEMEDISCONT\n","```\n","\n","Вывод:\n","\n","```\n","Ваша скидка: 5%\n","Итоговая сумма: 4754.75\n","```\n","Этап 2:\n","\n","Оформите ваш код в виде функции"],"metadata":{"id":"HmX0c6YPJSQr"}},{"cell_type":"code","source":["def calculate_total_price(unit_price, quantity, promo):\n","\n","    if quantity > 5000:\n","        discount = 0.15\n","        if promo == \"SUPERDISCOUNT\":\n","            discount = 0.20\n","    elif quantity > 1000:\n","        discount = 0.05\n","        if promo == \"SUPERDISCOUNT\":\n","            discount = 0.10\n","    else:\n","        discount = 0.0\n","\n","    total_price = unit_price * quantity\n","    discount_amount = total_price * discount\n","    final_price = total_price - discount_amount\n","\n","    return discount * 100, final_price\n","\n","unit_price = float(input(\"Введите стоимость единицы товара: \"))\n","quantity = int(input(\"Введите количество товара: \"))\n","promo = input(\"Введите промокод: \")\n","\n","discount_percentage, final_price = calculate_total_price(unit_price, quantity, promo)\n","\n","print(f\"Ваша скидка: {discount_percentage}%\")\n","print(f\"Итоговая сумма: {final_price:.2f}\")\n"],"metadata":{"id":"OAIMIpklMN5D","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728730679584,"user_tz":-300,"elapsed":9006,"user":{"displayName":"K3nt1c","userId":"06930504406908418568"}},"outputId":"3633ac35-4212-4f93-9009-b1f43b24a535"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите стоимость единицы товара: 5 \n","Введите количество товара: 1001\n","Введите промокод: GiVEMEDISCONT\n","Ваша скидка: 5.0%\n","Итоговая сумма: 4754.75\n"]}]},{"cell_type":"markdown","source":["**Задача 2:**\n","\n","Этап 1:\n","Напишите программу способную отфильтровать список и вывести только положительные элементы\n","\n","\n","Ввод:\n","```\n","-1 5 1 2 -3\n","```\n","\n","Вывод:\n","\n","```\n","5 1 2\n","```\n","\n","Этап 2:\n","\n","Оформите ваш код в виде функции"],"metadata":{"id":"eeRVWpuLNGJ0"}},{"cell_type":"code","source":["def filter_positive_numbers(numbers):\n","\n","    return [num for num in numbers if num > 0]\n","\n","input_str = input()\n","numbers = list(map(int, input_str.split()))\n","positive_numbers = filter_positive_numbers(numbers)\n","print(positive_numbers)\n","\n","\n"],"metadata":{"id":"Xbi6bL0WOE9N","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728726958333,"user_tz":-300,"elapsed":6685,"user":{"displayName":"K3nt1c","userId":"06930504406908418568"}},"outputId":"3c80a076-66f0-41ef-f9fd-80c09bf428db"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 2 3 -2 -4 5 6\n","[1, 2, 3, 5, 6]\n"]}]},{"cell_type":"markdown","source":["**Задача 3:**\n","\n","Этап 1:\n","Напишите программу реализующую Алгоритм Евклида\n","\n","\n","> Алгоритм Евклида – это алгоритм нахождения наибольшего общего делителя (НОД) пары целых чисел.\n","\n","Чуть подробнее, если вы забыли: [link](https://skysmart.ru/articles/mathematic/naibolshij-obshchij-delitel)\n","\n","\n","Ввод:\n","```\n","30 18\n","```\n","\n","Вывод:\n","\n","```\n","6\n","```\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n"],"metadata":{"id":"lV-w6G-POa6F"}},{"cell_type":"code","source":["def  euclidean_alg(a, b):\n","  while b != 0:\n","    a, b = b, a % b\n","  return a\n","\n","a, b = map(int, input().split())\n","\n","c = euclidean_alg(a, b)\n","print(c)"],"metadata":{"id":"X2n6fnd91yt7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728727603135,"user_tz":-300,"elapsed":4069,"user":{"displayName":"K3nt1c","userId":"06930504406908418568"}},"outputId":"5a786c5b-984d-4761-9bb6-d54f5f70c328"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["36 24\n","12\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"43Dl5tIpOZsu"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Задача 4:**\n","\n","Этап 1:\n","Напишите функцию программу, которая принимает строку и возвращает список слов и количество их упомнинаний в предложении\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n","\n","Ввод:\n","```\n","apple banana apple\n","```\n","\n","Вывод:\n","\n","```\n","apple: 2,\n","banana: 1\n","```"],"metadata":{"id":"WIfPFxpsO0zL"}},{"cell_type":"code","source":["def count_words(sentence):\n","    words = sentence.split()\n","    word_count = {}\n","\n","    for word in words:\n","        word = word.lower()\n","        if word in word_count:\n","            word_count[word] += 1\n","        else:\n","            word_count[word] = 1\n","\n","    return word_count\n","\n","sentence = input()\n","word_count = count_words(sentence)\n","for word, count in word_count.items():\n","    print(f\"{word}: {count}\")"],"metadata":{"id":"DgsmFeW5Po_x","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728728129833,"user_tz":-300,"elapsed":10464,"user":{"displayName":"K3nt1c","userId":"06930504406908418568"}},"outputId":"213ef5fd-fed0-4d42-d0dc-b70f5e8a3a48"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите предложение: apple banana apple\n","Список слов и количество их упоминаний:\n","apple: 2\n","banana: 1\n"]}]},{"cell_type":"markdown","source":["**Задача 5:**\n","\n","Этап 1:\n","Детектор анаграмм Напишите программу на Python, которая принимает в качестве входных данных две строки и проверяет, являются ли они анаграммами друг друга\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n","\n","Ввод:\n","```\n","listen, silent\n","```\n","\n","Вывод:\n","\n","```\n","True\n","```"],"metadata":{"id":"5BmIJLUZP9I-"}},{"cell_type":"code","source":["def are_anagrams(str1, str2):\n","    str1 = str1.replace(\" \", \"\").lower()\n","    str2 = str2.replace(\" \", \"\").lower()\n","\n","    if len(str1) != len(str2):\n","        return False\n","\n","    count1 = {}\n","    count2 = {}\n","\n","    for char in str1:\n","        if char in count1:\n","            count1[char] += 1\n","        else:\n","            count1[char] = 1\n","\n","    for char in str2:\n","        if char in count2:\n","            count2[char] += 1\n","        else:\n","            count2[char] = 1\n","\n","    return count1 == count2\n","\n","str1 = input()\n","str2 = input()\n","\n","result = are_anagrams(str1, str2)\n","\n","print(result)"],"metadata":{"id":"7LNW8DuHQJwH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728730559941,"user_tz":-300,"elapsed":17655,"user":{"displayName":"K3nt1c","userId":"06930504406908418568"}},"outputId":"217b0691-cf34-4a4c-82af-58361c3b7fea"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите первую строку: listen\n","Введите вторую строку: silten\n","True\n"]}]},{"cell_type":"markdown","source":["**Задача 6:**\n","\n","Шифр ​​Цезаря\n","\n","Напишите программу на Python, которая реализует шифр Цезаря, простой метод шифрования, который заменяет каждую букву буквой на фиксированное количество позиций вниз по алфавиту. Программа должна запрашивать у пользователя сообщение и значение сдвига, а затем шифровать и расшифровывать сообщение.\n","Подробнее о шифре Цезаря: [link](https://habr.com/ru/articles/534058/)\n","\n","Этап 1:\n","\n","Напишите код для реализации данной задачи\n","\n","Этап 2:\n","\n","Оформите код в виде нескольких функций:\n","\n","* Зашифровывает сообщение\n","* Расшифровывает сообщение"],"metadata":{"id":"-SIWYSq2QKBh"}},{"cell_type":"code","source":[],"metadata":{"id":"anThYirsQe6N"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Задача 7**\n","\n","Задача: «Банковская система»\n","\n","Создайте программу Python, которая имитирует базовую банковскую систему. Система должна иметь следующие функции:\n","\n","Требования\n","*   Система должна позволять клиентам создавать счета и хранить их балансы.\n","*   Система должна позволять клиентам вносить и снимать деньги со своих счетов.\n","*   Система должна позволять клиентам проверять свой текущий баланс.\n","*   Система должна позволять клиентам переводить деньги между счетами.\n","*   Система должна отслеживать транзакции (депозиты, снятия и переводы) и иметь возможность печатать детали транзакций.\n","\n","\n","Задачи\n","1. Реализуйте банковскую систему, используя только базовые конструкции Python, такие как def, lists, if, elif и else, без классов или словарей.\n","Определите функции для создания счетов, внесения и снятия денег, получения балансов счетов, перевода денег между счетами, а также создания и печати транзакций.\n","2. Напишите основную функцию, которая демонстрирует использование банковской системы путем создания счетов, внесения и снятия денег и перевода денег между счетами.\n","3. Бонусное задание\n","Реализуйте способ хранения и печати истории транзакций для каждого счета.\n","\n","Ограничения\n","Не используйте классы или словари.\n","Используйте только базовые конструкции Python, такие как def, lists, if, elif и else.\n"],"metadata":{"id":"avFZRRXrQz9O"}},{"cell_type":"code","source":[],"metadata":{"id":"dWEW10zIRwjs"},"execution_count":null,"outputs":[]}]}