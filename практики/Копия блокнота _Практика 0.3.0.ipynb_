{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1wk5ynY70nCt0ubANPIYZGhm_CIC3vPwo","timestamp":1728358684494},{"file_id":"1fct_CW6CXNQ7LoEF2ZJ4hoyr-wUtTlNk","timestamp":1728038946108}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["ФИО"],"metadata":{"id":"phMKaFq3DN13"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"3CWpaI7SDK8t"},"outputs":[],"source":["Бочкарев Пётр Владиславович"]},{"cell_type":"markdown","source":["**Во всей практике нельзя применять библиотеки предоставляющие готовые решения!**"],"metadata":{"id":"jyIy3GOgFOCe"}},{"cell_type":"markdown","source":["# **Задача 1.**\n"],"metadata":{"id":"XizmlL1RK2t3"}},{"cell_type":"markdown","source":["\n","\n","Типы данных Напишите программу на Python, которая принимает список чисел в качестве входных данных от пользователя, а затем выводит сумму, среднее значение и максимальное значение из списка.\n","\n","***Нельзя использовать: len(), min(), max(), average(), sum()***\n","\n","Ввод:\n","```\n","1 2 3 4 5 6 7\n","```\n","Вывод:\n","\n","```\n","Сумма чисел: 28\n","Среднее арифм.: 4.0\n","Максимальное значение: 7\n","```\n","\n"],"metadata":{"id":"p0v6KtHTFKSd"}},{"cell_type":"markdown","source":[],"metadata":{"id":"mf2y254BjeA5"}},{"cell_type":"code","source":["numbers = list(input().split())\n","sum = 0\n","count = 0\n","for number in numbers:\n","  max = int(number)\n","  sum += int(number)\n","  count = int(number)\n","avarge = sum / count\n","print('Сумма чисел:', sum)\n","print('Среднее арифм. :', avarge)\n","print('Максимальное значение:', max)\n","\n","\n","\n"],"metadata":{"id":"0e1Virl0FpF6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728368222377,"user_tz":-300,"elapsed":3432,"user":{"displayName":"K3nt1c","userId":"06930504406908418568"}},"outputId":"0085fb3b-77b9-4b4b-f1b0-cc50ee0b2150"},"execution_count":181,"outputs":[{"output_type":"stream","name":"stdout","text":["1 2 3 4 5 6 7\n","Сумма чисел: 28\n","Среднее арифм. : 4.0\n","Максимальное значение: 7\n"]}]},{"cell_type":"markdown","source":["# **Задача 2.**"],"metadata":{"id":"uFluc5OSK0NH"}},{"cell_type":"markdown","source":["\n","Напишите программу на Python, которая принимает список слов в качестве входных данных от пользователя, а затем распечатывает список в обратном порядке.\n","\n","Ввод:\n","\n","```\n","апельсин мандарин яблоко\n","```\n","\n","Вывод:\n","\n","```\n","яблоко мандарин апельсин\n","```"],"metadata":{"id":"6T8vg324GG4Z"}},{"cell_type":"code","source":["words = input().split()\n","reversed_words = words[::-1]\n","print(' '.join(reversed_words))"],"metadata":{"id":"v3AWj4ufGKox","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728366425691,"user_tz":-300,"elapsed":3919,"user":{"displayName":"K3nt1c","userId":"06930504406908418568"}},"outputId":"32ce9a9a-b43b-4bff-9bae-d39fefda5645"},"execution_count":147,"outputs":[{"output_type":"stream","name":"stdout","text":["яблоко киви\n","киви яблоко\n"]}]},{"cell_type":"markdown","source":["# **Задача 3**"],"metadata":{"id":"D1KkCxtIKxRx"}},{"cell_type":"markdown","source":["Простой чат-бот\n","Создайте простого чат-бота, который отвечает на основные запросы пользователей. Программа должна использовать условные выражения для определения намерений пользователя и последующего соответствующего ответа.\n","\n","Чат бот может:\n","\n","- помогать складывать числа\n","- подсказывать фильм, музыку и тд (из заранее созданного списка)\n","- создавать список дел (а также выводить его, обновлять, очищать)\n","\n","Интерфейс чат-бота на ваше усмотрение, это могут быть как заранее определенные команды, так и к примеру вызов команды по номеру\n","\n","*Реализовать без использования функций*\n","\n","Пример:\n","\n","Ввод:\n","\n","```\n","Олег, какую мызыку посоветуешь?\n","```\n","\n","Вывод:\n","\n","```\n","Я бы посоветовал вам: Led Zeppelin Stairway to Heaven\n","```"],"metadata":{"id":"Yq8Jgb9yHvSi"}},{"cell_type":"code","source":[],"metadata":{"id":"fmW-tmUtINN9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **Задача 4.**\n"],"metadata":{"id":"PHXBfyc6Ko7D"}},{"cell_type":"markdown","source":["Камень, ножницы, бумага\n","\n","Создайте игру в Камень, ножницы, бумагу, в которой пользователь может играть против компьютера. Программа должна запросить выбор пользователя, а затем сгенерировать выбор компьютера. Затем программа должна определить победителя на основе правил игры.\n","\n","**Этап 1:**\n","\n","Определение победителя\n","\n","**Этап 2:**\n","  \n","Игра до 3 побед\n","\n","\n","Ввод для \"Этап 1\":\n","\n","```\n","Камень\n","```\n","\n","Вывод:\n","\n","```\n","Компьютер: Ножницы\n","Игрок: Камень\n","Победа: Игрок\n","```"],"metadata":{"id":"jnKWeYleI0j6"}},{"cell_type":"code","source":["import random\n","\n","player = input()\n","\n","computer = ['камень', 'ножницы', 'бумага']\n","computer = random.choice(computer)\n","\n","print('Компьютер: ', computer)\n","print('Игрок: ', player)\n","\n","if computer == 'камень' and player == 'бумага':\n","    print('Победа: игрок')\n","elif computer == 'камень' and player == 'ножницы':\n","    print('победа: компьютер')\n","elif computer == 'ножницы' and player == 'камень':\n","    print('победа: игрок')\n","elif computer == 'ножницы' and player == 'бумага':\n","    print('победа: компьютер')\n","elif computer == 'бумага' and player == 'камень':\n","    print('победа: компьютер')\n","elif computer == 'бумага' and player == 'ножницы':\n","      print('победа: игрок')\n","else:\n","  print('ничья')\n"],"metadata":{"id":"ooIPCRe_JHkX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728369631151,"user_tz":-300,"elapsed":2413,"user":{"displayName":"K3nt1c","userId":"06930504406908418568"}},"outputId":"55e835d4-50ff-40ed-c7ae-440c8bd457ce"},"execution_count":206,"outputs":[{"output_type":"stream","name":"stdout","text":["камень\n","Компьютер:  ножницы\n","Игрок:  камень\n","победа: игрок\n"]}]},{"cell_type":"markdown","source":["# **Задача 5.**"],"metadata":{"id":"Hg4FJNFbLHQO"}},{"cell_type":"markdown","source":["Создайте игру \"Палач\" или \"Виселица\", в которой пользователь должен угадать слово, предлагая буквы. Программа должна выбрать случайное слово, а затем разрешить пользователю угадывать буквы. После каждого угадывания программа должна сообщать пользователю, есть ли в слове буква или нет.\n","\n","**Этап 1**\n","Создать саму игру (игра должна иметь привлекательный интерфейс, соотвесвующий классической висилице)\n","\n","**Этап 2:**\n","Ввести подсчет количества очков и ограничения на попытки\n","\n","**Этап 3:** Добавить возможность сразу угадать слово"],"metadata":{"id":"OHqj3HJuLJgY"}},{"cell_type":"code","source":[],"metadata":{"id":"0N2zCYwVLiIw"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **Дополнительно: Задача 6 (для тех, кто не сделал в прошлый раз)**\n"],"metadata":{"id":"w0x3QFGzKtDD"}},{"cell_type":"markdown","source":["\n","**Цифра на определенном месте:**\n","\n","Последовательно записан натуральный ряд чисел.\n","\n","Какая цифра стоит в N позиции\n","\n","\n","Вввод:\n","\n","```\n","Введите номер позиции: 1234567890\n","```\n","\n","Вывод:\n","\n","```\n","8\n","```"],"metadata":{"id":"QqZArcpHJxVj"}},{"cell_type":"code","source":[],"metadata":{"id":"LwjYwBGcKiJ9"},"execution_count":null,"outputs":[]}]}